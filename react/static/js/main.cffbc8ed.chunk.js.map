{"version":3,"sources":["Context/Authentication.js","Components/Users/SignInForm.js","Components/Tasks/TaskTable.js","Components/Tasks/TaskDisplay.js","Components/Tasks/CreateTaskForm.js","Components/Navigation/Links.js","Components/Navigation/PrivateRoutes.js","Components/Lists/CreateListForm.js","Components/Users/CreateUserForm.js","Components/Lists/ListTable.js","Components/Lists/ListDisplay.js","Components/SelectList.js","Components/Tasks/EditTask.js","Components/Lists/EditList.js","Components/Navigation/Routes.js","Pages/index.js","Components/Navigation/SignOut.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","isAuthenticated","userLogged","activeList","authenticate","signout","identify","SIForm","state","username","password","touched","attempt","change","e","setState","target","name","value","handleBlur","field","onSubmit","preventDefault","Axios","get","params","then","res","console","log","data","context","redirect","catch","error","this","Consumer","push","to","errors","length","isEnabled","Object","keys","some","x","showErr","hasError","shouldShow","showValid","maxLength","className","filled","onBlur","placeholder","onChange","type","disabled","onClick","Component","contextType","TaskTable","clickedTasks","clickedButtons","unavailableTasks","id","includes","props","completedTasks","obj","completed","_id","shape","isClicked","onClickCapture","checkClicked","checkComplete","deletable","checkDeletable","description","due","isCompleted","shown","editMenu","buttonClicked","deleteOneTask","TaskDisplay","taskTable","taskCollection","map","i","key","CTForm","task","user","list","post","refreshTasks","componentDidMount","selection","editId","clickedTaskNames","doneDelete","selectedDelete","bind","setDoneDelete","splice","indexOf","clicked","patch","delete","names","back","pathname","goBack","setSelectedDelete","deleteDoneTasks","deleteSelectedTasks","withRouter","Links","PrivateRoute","children","rest","render","location","from","CLForm","desc","unavailableLists","history","CUForm","email","cpassword","unavailableUsers","unavailableEmails","taken","ListTable","clickedLists","listname","clickHandler","deleteOneList","ListDisplay","listTable","listCollection","SelectList","refreshLists","listsLoaded","redirect2","redirect3","addlist","ETask","EList","taskUpdate","prevName","nameUpdate","Routes","exact","path","EditTask","EditList","SignOut","useHistory","useContext","App","useState","setAuthenticated","store","Provider","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cffbc8ed.chunk.js","sourcesContent":["import React from 'react'\n\nexport const AuthContext = React.createContext({\n    isAuthenticated: false,\n    userLogged: \"none\",\n    activeList: \"none\",\n    authenticate : () => {},\n    signout : () => {},\n    identify : () => {}\n})\n\n","import React from 'react';\nimport '../../form.css'\nimport Axios from 'axios';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom'\nimport '../../App';\nimport { AuthContext } from '../../Context/Authentication';\n\n\nfunction validate(username, password) {\n    return {\n        username: username.length === 0,\n        password: password.length === 0,\n    }\n    \n}\n\nexport default class SIForm extends React.Component {\n   \n            state = { \n            username: \"\", \n            password: \"\",\n\n            touched: {\n                username: false, \n                password: false\n            },\n\n            attempt: true\n        }\n\n    change = e => {\n        this.setState({\n        [e.target.name]: e.target.value\n        })\n    };\n\n    handleBlur = (field) => (e) => {\n        this.setState({\n          touched: { ...this.state.touched, [field]: true },\n        });\n      }\n\n\n    onSubmit = e => {\n        e.preventDefault()\n        Axios.get('https://to-do-list-server-api.herokuapp.com/colortheme', {\n            params: {\n                username: this.state.username,\n                password: this.state.password\n            }\n        })\n        .then(res => {\n            console.log(res)\n            if(res.data === true){\n                console.log('Password matches')\n                this.context.authenticate()\n                this.setState({ attempt: true})\n                this.setState({ redirect: true})\n            } else {\n                this.setState({\n                    username: \"\", \n                    password: \"\",\n\n                touched: {\n                    username: false, \n                    password: false\n                }\n                })\n                this.setState({ attempt: false})\n                console.log(`Matching Failed ${this.state.password}`)\n            }\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n       \n    }\n\n    render(){\n\n        if(this.state.redirect){\n            console.log('login successful')\n            return(\n            <AuthContext.Consumer>\n            {({identify}) => (\n                <Redirect push={identify(this.state.username, this.context.state.activeList)} to={'/Select'}/>\n            )}\n            </AuthContext.Consumer>\n            )\n            }\n    \n        \n        \n\n        var errors = validate(this.state.username, this.state.password);        \n        const isEnabled = !Object.keys(errors).some(x => errors[x]);\n        \n        const showErr = (field) => {\n            const hasError = errors[field];\n            const shouldShow = this.state.touched[field];\n      \n            return hasError ? shouldShow : false;\n          };\n\n          const showValid = (field) => {\n            const shouldShow = this.state.touched[field];\n\n            return shouldShow ? true : false\n            \n          };\n\n          \n        return (\n            <div>\n            <form>\n                <h3>Sign-In</h3>\n                <input \n                name=\"username\" \n                maxLength={20}\n                className={showErr('username') ? \"error\" : \"\"}\n                filled={showValid('username') ? \"good\" : \"\"}\n                onBlur={this.handleBlur('username')}\n                placeholder=\"Username\"\n                value={this.state.username} \n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <p className={showErr('username') ? \"shown-messages\" : \"hidden-messages\"}>Enter Username</p>\n                <br/>\n                <input \n                name=\"password\"\n                maxLength={30}\n                className={showErr('password') ? \"error\" : \"\"}\n                filled={showValid('password') ? \"good\" : \"\"}\n                onBlur={this.handleBlur('password')}\n                placeholder=\"Password\"\n                type=\"password\" \n                value={this.state.password} \n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <p className={showErr('password') ? \"shown-messages\" : \"hidden-messages\"}>Enter Password</p>\n                <br/>\n                <p className={this.state.attempt ? \"hidden-messages\" : \"shown-messages\"}>Sign-In Failed</p>\n                <br/>\n                \n                <button disabled={!isEnabled} onClick={e => this.onSubmit(e)}>Sign-In</button>\n            </form>\n            <p>New User?</p> <Link to=\"/CUForm\">Create Account</Link>\n            </div>\n        )\n    }\n}\nSIForm.contextType = AuthContext;","import React, { Component } from 'react';\nimport '../../form.css'\n\n\n\n\nclass TaskTable extends Component {\n    state = {\n        clickedTasks: [],\n        clickedButtons: [],\n        unavailableTasks: []\n    }\n\n    checkClicked(id){\n        let bool = (this.state.clickedTasks.includes(id))\n        return bool\n    }\n\n    checkComplete(id){\n        let bool = (this.props.completedTasks.includes(id))\n        return bool\n    }\n\n    checkDeletable(id){\n        let bool = (this.state.clickedButtons.includes(id))\n        return bool\n    }\n\n    componentDidMount(){\n        this.props.unavailableTasks.push(this.props.obj.name)\n        this.setState({ unavailableTasks: this.props.unavailableTasks})\n\n        if(this.props.obj.completed === \"true\"){\n            this.props.completedTasks.push(this.props.obj._id)\n            this.setState({ completedTasks: this.props.completedTasks })\n        }\n    }\n\n    render() {\n        const id = this.props.obj._id\n        const name = this.props.obj.name\n\n        return (\n            <div \n            shape=\"rTableRow\" \n            onClick={() => this.props.isClicked(id, name)}\n            onClickCapture={() => this.setState({clickedTasks: this.props.clickedTasks})}\n            className={(this.checkClicked(id)) ? \"rowClicked\" : \"rowNotClicked\"} \n            completed={(this.checkComplete(id)) ? \"rowCompleted\" : \"\"}\n            deletable={(this.checkDeletable(id)) ? \"true\" : \"false\"}\n            >\n                <div \n                shape=\"rTableCell\"\n                className={(this.checkClicked(id)) ? \"rowClicked\" : \"rowNotClicked\"}\n                    completed={(this.checkComplete(id)) ? \"rowCompleted\" : \"\"}>\n                    {this.props.obj.name}\n                </div>\n                <div \n                shape=\"rTableCell\"\n                className={(this.checkClicked(id)) ? \"rowClicked\" : \"rowNotClicked\"}\n                    completed={(this.checkComplete(id)) ? \"rowCompleted\" : \"\"}>\n                    {this.props.obj.description}\n                </div>\n                <div \n                shape=\"rTableCell\"\n                className={(this.checkClicked(id)) ? \"rowClicked\" : \"rowNotClicked\"}\n                    completed={(this.checkComplete(id)) ? \"rowCompleted\" : \"\"}>\n                    {this.props.obj.due}\n                </div>\n                <div \n                shape=\"rTableCell\">\n                    <button \n                    className={(this.checkClicked(id)) ? \"Clicked\" : \"notClicked\"} \n                    onClick={() => this.props.isCompleted(id)}\n                    onClickCapture={() => this.setState({completedTasks: this.props.completedTasks})}\n                    completed={(this.checkComplete(id)) ? \"rowCompleted\" : \"\"} \n                    shown={(this.checkDeletable(id)) ? \"hidden\" : \"\"}\n                    >Done</button>\n                \n                </div>\n                <div \n                shape=\"rTableCell\">\n                    <button className={(this.checkClicked(id)) ? \"Clicked\" : \"notClicked\"} \n                    onClick={() => this.props.editMenu(this.props.obj)}\n                    completed={(this.checkComplete(id)) ? \"rowCompleted\" : \"\"}\n                    shown={(this.checkDeletable(id)) ? \"hidden\" : \"\"}\n                    >Edit</button>\n                </div>\n                <div shape=\"rTableCell\">    \n                    <button \n                    onClick={() => this.props.buttonClicked(id)} \n                    onClickCapture={() => this.setState({clickedButtons: this.props.clickedButtons})}\n                    completed={(this.checkComplete(id)) ? \"rowCompleted\" : \"\"}\n                    className={(this.checkClicked(id)) ? \"Clicked\" : \"notClicked\"}\n                    shown={(this.checkDeletable(id)) ? \"hidden\" : \"\"}\n                    >Delete</button> \n                    <button \n                    className=\"deletebutton\"\n                    onClick={() => this.props.deleteOneTask(id)}\n                    shown={(this.checkDeletable(id)) ? \"\" : \"hidden\"}\n                    >Delete Task?</button>\n                </div>\n                <div \n                shape=\"rTableCell\">\n                <button \n                    className={(this.checkClicked(id)) ? \"Clicked\" : \"\"}\n                    onClick={() => this.props.buttonClicked(id)}\n                    shown={(this.checkDeletable(id)) ? \"show\" : \"hidden\"}\n                    >Cancel</button>\n                </div>\n                    \n            </div>\n        );\n    }\n}\n\nexport default TaskTable;","import React, { Component } from 'react';\nimport TaskTable from './TaskTable.js'\nimport '../../form.css'\n\n\nexport default class TaskDisplay extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = { \n            taskCollection: [],\n            clickedTasks: [],\n            completedTasks: [],\n            clickedButtons: [],\n            unavailableTasks: []\n        };\n    }\n\n\n    taskTable = () => {\n        return this.props.taskCollection.map((data, i) => {\n            return <TaskTable obj={data} key={i}\n            editMenu={this.props.editMenu} \n            isClicked={this.props.isClicked} clickedTasks={this.props.clickedTasks} \n            isCompleted={this.props.isCompleted} completedTasks={this.props.completedTasks}\n            deleteOneTask={this.props.deleteOneTask}\n            clickedButtons={this.props.clickedButtons} buttonClicked={this.props.buttonClicked}\n            unavailableTasks={this.props.unavailableTasks}\n            \n            />;\n        });\n    }\n\n    render(){\n        const taskTable = this.taskTable()\n\n\n        return(\n            <div className=\"tableDisplay\">\n                <div shape=\"rTable\">\n                        <div shape=\"rTableRow\">\n                            <div shape=\"rTableCell\">Name</div>\n                            <div shape=\"rTableCell\">Description</div>\n                            <div shape=\"rTableCell\">Due</div>\n                        </div>\n                    \n                        {taskTable}\n                        \n                </div>\n\n            </div>\n\n        )\n    }\n\n\n\n}\n","import React from 'react';\nimport Axios from 'axios';\nimport 'react-router-dom'\nimport TaskDisplay from './TaskDisplay';\nimport { AuthContext } from '../../Context/Authentication'\nimport { Redirect, withRouter } from 'react-router-dom';\nimport '../../form.css'\n//\n\n\n\nclass CTForm extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            name: \"\",\n            description: \"\",\n            due: \"\",\n            selection: \"\",\n            editId: \"\",\n            taskCollection: [],\n            clickedTasks: [],\n            clickedTaskNames: [],\n            completedTasks: [],\n            clickedButtons: [],\n            unavailableTasks: [],\n            doneDelete: false,\n            selectedDelete: false\n            \n        };\n\n        //this.clickHandler = this.clickHandler.bind(this)\n        this.change = this.change.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.editMenu = this.editMenu.bind(this)\n        this.isClicked = this.isClicked.bind(this)\n        this.isCompleted = this.isCompleted.bind(this)\n        this.deleteOneTask = this.deleteOneTask.bind(this)\n        this.buttonClicked = this.buttonClicked.bind(this)\n        this.setDoneDelete = this.setDoneDelete.bind(this)\n        \n    }\n\n    change = e => {\n        this.setState({\n        [e.target.name]: e.target.value\n        })\n\n    };\n\n    refreshTasks(){\n        Axios.get('https://to-do-list-server-api.herokuapp.com/tasks', {\n            params: {\n                user: this.context.state.userLogged,\n                list: this.context.state.activeList\n            }\n        })\n        .then(res => {\n            console.log(res.data)\n            this.setState({\n                 taskCollection: res.data.data,\n             });\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        const task = {\n            user: this.context.state.userLogged,\n            name: this.state.name,\n            description: this.state.description,\n            due: this.state.due,\n            list: this.context.state.activeList\n        }\n        Axios.post('https://to-do-list-server-api.herokuapp.com/tasks', task)\n        .then((res) => {\n            console.log(res.data)\n            this.setState({\n                name: \"\",\n                description: \"\",\n                due: \"\"\n            })\n            this.refreshTasks()\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    componentDidMount = () => {\n        this.refreshTasks()\n    }\n    \n\n    editMenu(obj){\n        this.setState({\n            name: obj.name,\n            description: obj.description,\n            due: obj.due,\n            editId: obj._id \n        })\n        this.state.unavailableTasks.splice(this.state.unavailableTasks.indexOf(obj.name), 1);\n        this.setState({ redirect: true})\n    }\n\n    isClicked(id, name){\n        let clicked = (this.state.clickedTasks.includes(id))\n       //console.log(clicked)\n       if(clicked === false){\n           this.state.clickedTasks.push(id)\n           this.state.clickedTaskNames.push(name)\n           return clicked === true\n\n       } else if(clicked === true){\n           this.state.clickedTasks.splice(this.state.clickedTasks.indexOf(id), 1);\n           this.state.clickedTaskNames.splice(this.state.clickedTaskNames.indexOf(id), 1);\n           return clicked === false\n       }\n    }\n\n    buttonClicked(id){\n        let clicked = (this.state.clickedButtons.includes(id))\n       //console.log(clicked)\n       if(clicked === false){\n           this.state.clickedButtons.push(id)\n           return clicked === true\n\n       } else if(clicked === true){\n           this.state.clickedButtons.splice(this.state.clickedButtons.indexOf(id), 1);\n           return clicked === false\n       }\n    }\n\n\n    isCompleted(id){\n        Axios.get('https://to-do-list-server-api.herokuapp.com/completion', {\n            params: {\n                id: id,\n                completed: \"true\"\n            }\n        })\n        .then(res => {\n            if(res.data === false){\n                const task = { completed: \"true\" }\n                Axios.patch('https://to-do-list-server-api.herokuapp.com/tasks', {\n                params: {\n                    id: id,\n                    task: task\n                }\n            })\n            .then((res) => {\n                this.state.completedTasks.push(id)\n                this.refreshTasks()\n            }).catch((error) => {\n                console.log(error)\n            });\n                \n            } else if(res.data === true){\n                const task = { completed: \"false\" }\n                Axios.patch('https://to-do-list-server-api.herokuapp.com/tasks', {\n                params: {\n                    id: id,\n                    task: task\n                }\n            })\n            .then((res) => {\n                this.state.completedTasks.splice(this.state.completedTasks.indexOf(id), 1);\n                this.refreshTasks()\n            }).catch((error) => {\n                console.log(error)\n            });\n    \n            }\n    \n        })\n        .catch(function(error){\n            console.log(error);\n        })\n    }\n\n       \n\n\n    deleteOneTask(id){\n        console.log(id)\n        Axios.delete('https://to-do-list-server-api.herokuapp.com/tasks', {\n        params: {\n            id: id\n        }\n    })\n        .then(res => {\n            this.state.unavailableTasks.splice(0, this.state.unavailableTasks.length)\n            this.refreshTasks()\n            //console.log(res)\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n    }\n\n    deleteDoneTasks(){\n        Axios.delete('https://to-do-list-server-api.herokuapp.com/tasksdone', {\n            params: {\n                user: this.context.state.userLogged,\n                list: this.context.state.activeList\n            }\n        })\n        .then(res => {\n            console.log(res.data)\n            this.state.unavailableTasks.splice(0, this.state.unavailableTasks.length)\n            this.refreshTasks()\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n    }\n\n    deleteSelectedTasks(){\n        const names = this.state.clickedTaskNames\n            Axios.delete('https://to-do-list-server-api.herokuapp.com/selecttasks', {\n            params: {\n                user: this.context.state.userLogged,\n                list: this.context.state.activeList,\n                names: names\n            }\n        })\n            .then(res => {\n                this.state.unavailableTasks.splice(0, this.state.unavailableTasks.length)\n                this.refreshTasks()\n                //console.log(res)\n            })\n            .catch(function(error){\n                console.log(error);\n            })\n    }\n\n    goBack(){\n        this.setState({ back: true })\n    }\n\n    setDoneDelete(){\n        if(this.state.doneDelete === false){\n            this.setState({ doneDelete: true})\n            return true\n        } else if(this.state.doneDelete === true){\n            this.setState({ doneDelete: false })\n            return false\n        }\n    }\n    \n    setSelectedDelete(){\n        if(this.state.selectedDelete === false){\n            this.setState({ selectedDelete: true })\n            return true\n        } else if(this.state.selectedDelete === true){\n            this.setState({ selectedDelete: false })\n            return false\n        }\n    }\n\n    render () {\n        if(this.state.redirect){\n        return (\n            <Redirect push={true} to={{\n                pathname: '/ETask',\n                state: { \n                    id: this.state.editId,\n                    name: this.state.name,\n                    description: this.state.description,\n                    due: this.state.due,\n                    unavailableTasks: this.state.unavailableTasks\n                }\n            }}/>\n        )\n        }\n\n        if(this.state.back){\n            return (\n                <Redirect push to={'/Select'}/>\n            )\n        }\n        \n        return(\n            <div>\n            <form>\n                <h3>Create New Task</h3>\n                <input\n                name=\"name\"\n                maxLength={20}\n                placeholder=\"Task Name\"\n                value={this.state.name}\n                onChange={e => this.change(e)}\n                />\n                <p className={(this.state.unavailableTasks.includes(this.state.name)) ? \"shown-messages\" : \"hidden-messages\" }>No duplicate tasks in the same list</p>\n                <br/>\n                <input\n                name=\"description\"\n                maxLength={50}\n                placeholder=\"What to do\"\n                value={this.state.description}\n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <input\n                name=\"due\"\n                maxLength={20}\n                placeholder=\"When to have it done\"\n                value={this.state.due}\n                onChange={e => this.change(e)}\n                />\n                <br/>\n                \n                <button disabled={this.state.name.length === 0 || (this.state.unavailableTasks.includes(this.state.name))} onClick={e => this.onSubmit(e)}>Add Task</button>\n                \n            </form>\n            <h2>{`${this.context.state.activeList}`}</h2>\n            <button type=\"button\" onClick={() => this.goBack()}>Back</button>\n\n            <TaskDisplay taskCollection={this.state.taskCollection} \n            editMenu={this.editMenu} isClicked={this.isClicked} \n            clickedTasks={this.state.clickedTasks} \n            isCompleted={this.isCompleted}\n            completedTasks={this.state.completedTasks}\n            deleteOneTask={this.deleteOneTask}\n            clickedButtons={this.state.clickedButtons}\n            buttonClicked={this.buttonClicked}\n            unavailableTasks={this.state.unavailableTasks}\n\n            />\n            <br/>\n            \n                <button \n                    onClick={() => this.setDoneDelete()} \n                    shown={this.state.doneDelete ? \"hidden\" : \"\"}\n                    >Delete Done Tasks</button> \n                \n                <button \n                    className=\"Clicked\"\n                    onClick={() => this.setDoneDelete()}\n                    shown={this.state.doneDelete ? \"show\" : \"hidden\"}\n                    >Cancel</button>\n                \n\n                <button\n                    onClick={() => this.setSelectedDelete()}\n                    shown={this.state.selectedDelete ? \"hidden\" : \"\"}\n                    >Delete Selected Tasks</button>\n\n                <button \n                    className=\"Clicked\"\n                    onClick={() => this.setSelectedDelete()}\n                    shown={this.state.selectedDelete ? \"show\" : \"hidden\"}\n                    >Cancel</button>\n               \n                \n\n            <br/>\n\n            <button \n                    className=\"deletebutton\"\n                    onClick={() => this.deleteDoneTasks()}\n                    onClickCapture={() => this.setDoneDelete()}\n                    shown={this.state.doneDelete ? \"\" : \"hidden\"}\n                    >Delete Completed Tasks?</button>\n\n            <button \n                    className=\"deletebutton\"\n                    onClick={() => this.deleteSelectedTasks()}\n                    onClickCapture={() => this.setSelectedDelete()}\n                    shown={this.state.selectedDelete ? \"\" : \"hidden\"}\n                    >Delete Selected Tasks?</button>\n\n                    <br/>\n            \n            </div>\n\n            \n\n        )\n        \n    }\n\n}\nexport default withRouter(CTForm)\nCTForm.contextType = AuthContext;","import React from 'react'\n//import { Link } from \"react-router-dom\";\n\nexport const Links = () => {\n    return(\n        <ul>\n              \n        </ul>\n    )\n}","import React from \"react\";\nimport {\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport { AuthContext } from '../../Context/Authentication'\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n    return (\n        <AuthContext.Consumer>\n            {({isAuthenticated}) => (\n                    <Route\n                        {...rest}\n                        render={({ location }) =>\n                            isAuthenticated ? (\n                                children\n                            ) : (\n                                    <Redirect\n                                        to={{\n                                            pathname: \"/\",\n                                            state: { from: location }\n                                        }}\n                                    />\n                                )\n                        }\n                    />\n                )\n            }\n        </AuthContext.Consumer>\n        \n    );\n}\n\nexport default PrivateRoute","import React from 'react';\nimport Axios from 'axios';\nimport { AuthContext } from '../../Context/Authentication';\nimport { withRouter, Redirect } from 'react-router-dom';\n\n\nclass CLForm extends React.Component{\n    state = {\n        name: \"\",\n        desc: \"\",\n        due: \"\",\n\n        unavailableLists: []\n    }\n\n    change = e => {\n        this.setState({\n        [e.target.name]: e.target.value\n        })\n    };\n    \n    onSubmit = e => {\n        e.preventDefault()\n\n        const list = {\n            user: this.context.state.userLogged,\n            name: this.state.name,\n            description: this.state.desc,\n            due: this.state.due,\n        }\n      \n        Axios.post('https://to-do-list-server-api.herokuapp.com/lists', list)\n        .then((res) => {\n            console.log(res.data)\n            this.setState({\n                name: \"\",\n                desc: \"\",\n                due: \"\"\n            })\n            this.setState({ redirect: true })\n        }).catch((error) => {\n            console.log(error)\n        });\n\n        \n\n    }\n    \n    componentDidMount(){\n        this.setState({ unavailableLists: this.props.history.location.state.unavailableLists })\n    }\n\n    goBack(){\n        this.setState({ back: true })\n    }\n    \n    render () {\n        if (this.state.redirect){\n            return (\n                <Redirect push to={'/Select'}/>\n            )\n        }\n\n        if(this.state.back){\n            return (\n                <Redirect push to={'/Select'}/>\n            )\n        }\n\n        return(\n            <div>\n            <form>\n                <h3>Create New List</h3>\n                <input\n                name=\"name\"\n                maxLength={20}\n                placeholder=\"List Name\"\n                value={this.state.name}\n                onChange={e => this.change(e)}\n                />\n                <p className={(this.state.unavailableLists.includes(this.state.name)) ? \"shown-messages\" : \"hidden-messages\" } >List names must be unique</p>\n                <br/>\n                <input\n                name=\"desc\"\n                maxLength={50}\n                placeholder=\"Type of List\"\n                value={this.state.desc}\n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <input\n                name=\"due\"\n                maxLength={20}\n                placeholder=\"Timeframe\"\n                value={this.state.due}\n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <button disabled={(this.state.unavailableLists.includes(this.state.name)) ? true : false} \n                onClick={e => this.onSubmit(e)}\n                >Add List</button>\n                <br/>\n                <button type=\"button\" onClick={() => this.goBack()}>Back</button>\n\n            </form>\n            </div>\n        )\n    }\n\n}\nexport default withRouter(CLForm);\nCLForm.contextType = AuthContext","import React from 'react';\nimport '../../form.css'\nimport Axios from 'axios'\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\n\n\nfunction validate(username, email, password, cpassword) {\n    return {\n        username: username.length === 0,\n        email: email.length === 0,\n        password: password.length === 0,\n        cpassword: cpassword !== password || cpassword.length === 0\n    }\n    \n}\n\nexport default class CUForm extends React.Component {\n    state = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        cpassword: \"\",\n\n        touched: {\n            username: false, \n            email: false,\n            password: false,\n            cpassword: false,\n        },\n\n        unavailableUsers: [],\n        unavailableEmails: []\n    };\n\n    change = e => {\n        this.setState({\n        [e.target.name]: e.target.value\n        })\n    };\n\n    handleBlur = (field) => (e) => {\n        this.setState({\n          touched: { ...this.state.touched, [field]: true },\n        });\n      }\n\n    onSubmit = e => {\n        e.preventDefault()\n        const user = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password\n        }\n        Axios.get('https://to-do-list-server-api.herokuapp.com/textfont', {\n            params: {\n                username: this.state.username\n            }\n        })\n        .then(res => {\n            console.log(res)\n            if(res.data === true){\n            (Axios.get('https://to-do-list-server-api.herokuapp.com/textcolor', {\n                params: {\n                    email: this.state.email\n                }\n            })\n            .then((res) => {\n                console.log(res)\n                if(res.data === true){\n                    console.log(`Email ${this.state.email} Available`)\n                    Axios.post('https://to-do-list-server-api.herokuapp.com/users', user)\n                    .then((res) => {\n                        console.log(res.data)\n                    }).catch((error) => {\n                        console.log(error)\n                    });\n                    this.setState({\n                        username: \"\",\n                        email: \"\",\n                        password: \"\",\n                        cpassword: \"\",\n    \n                        touched: {\n                            username: false,  \n                            email: false,\n                            password: false,\n                            cpassword: false,\n                        }\n    \n                    })\n                    this.setState({ redirect: true})\n                } else if(res.data === false){\n                    this.state.unavailableEmails.push(this.state.email)\n                    this.setState({email: this.state.email})\n                    console.log(`Email ${this.state.email} is already in use`)\n                }\n            }).catch((error) => {\n                console.log(error)\n            }))\n             \n            } else if(res.data === false){\n                this.state.unavailableUsers.push(this.state.username)\n                this.setState({username: this.state.username})\n                console.log(`Username ${this.state.username} is unavailable`)\n            }\n        }) \n        .catch(function(error){\n            console.log(error);\n        })\n\n    }\n\n    render(){\n        if (this.state.redirect) {\n            return <Redirect push to={ '/' }/>\n          }\n\n        var errors = validate(this.state.username, this.state.email, this.state.password, this.state.cpassword);        \n        const isEnabled = !Object.keys(errors).some(x => errors[x]);\n        \n        const showErr = (field) => {\n            const hasError = errors[field];\n            const shouldShow = this.state.touched[field];\n      \n            return hasError ? shouldShow : false;\n          };\n\n          const showValid = (field) => {\n            const shouldShow = this.state.touched[field];\n\n            return shouldShow ? true : false\n            \n          };\n          \n        return (\n            <div>\n            <form>\n                <h3>New User Registration</h3>\n                <input \n                name=\"username\" \n                maxLength={30}\n                className={showErr('username') ? \"error\" : \"\"}\n                filled={showValid('username') ? \"good\" : \"\"}\n                taken={this.state.unavailableUsers.includes(this.state.username) ? \"true\" : \"\"}\n                onBlur={this.handleBlur('username')}\n                placeholder=\"Username\"\n                value={this.state.username} \n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <p className={this.state.unavailableUsers.includes(this.state.username) ? \"shown-messages\" : \"hidden-messages\"}> Username unavailable</p>\n                <p className={showErr('username') ? \"shown-messages\" : \"hidden-messages\"}> Enter Username</p>\n                <br/>\n                <input \n                name=\"email\"\n                maxLength={30}\n                className={showErr('email') ? \"error\" : \"\"}\n                filled={showValid('email') ? \"good\" : \"\"}\n                taken={this.state.unavailableEmails.includes(this.state.email) ? \"true\" : \"\"}\n                onBlur={this.handleBlur('email')}\n                placeholder=\"Email Address\" \n                value={this.state.email} \n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <p className={this.state.unavailableEmails.includes(this.state.email) ? \"shown-messages\" : \"hidden-messages\"}> Email already in use, try Signing In</p>\n                <p className={showErr('email') ? \"shown-messages\" : \"hidden-messages\"}> Enter a valid Email address</p>\n                <br/>\n                <input \n                name=\"password\"\n                maxLength={30}\n                className={showErr('password') ? \"error\" : \"\"}\n                filled={showValid('password') ? \"good\" : \"\"}\n                onBlur={this.handleBlur('password')}\n                placeholder=\"Password\"\n                type=\"password\" \n                value={this.state.password} \n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <p className={showErr('password') ? \"shown-messages\" : \"hidden-messages\"}>Enter a good password</p>\n                <br/>\n                <input \n                name=\"cpassword\"\n                maxLength={30}\n                className={showErr('cpassword') ? \"error\" : \"\"}\n                filled={showValid('cpassword') ? \"good\" : \"\"}\n                onBlur={this.handleBlur('cpassword')}\n                placeholder=\"Confirm Password\"\n                type=\"password\" \n                value={this.state.cpassword} \n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <p className={showErr('cpassword') ? \"shown-messages\" : \"hidden-messages\"}>Passwords must match</p>\n                <br/>\n                <p className={isEnabled ? \"shown-messages\" : \"hidden-messages\"}>Ready to submit</p>\n                <br/>\n                <button disabled={!isEnabled} onClick={e => this.onSubmit(e)}>Create Account</button>\n                \n            </form>\n            <p>Already have an account?</p><Link to=\"/\">Sign-in</Link>\n            </div>\n            \n        )\n    }\n}","import React, { Component } from 'react';\n\n\n\n\nclass ListTable extends Component {\n    state = {\n        selection: [],\n        clickedLists: [],\n        clickedButtons: [],\n        unavailableLists: []\n    }\n    \n    checkClicked(id){\n        let bool = (this.state.clickedLists.includes(id))\n        return bool\n    }\n\n    checkDeletable(id){\n        let bool = (this.state.clickedButtons.includes(id))\n        return bool\n    }\n\n    componentDidMount(){\n        this.props.unavailableLists.push(this.props.obj.name)\n        this.setState({ unavailableLists: this.props.unavailableLists})\n    }    \n    render() {\n        const listname = this.props.obj.name\n        const id = this.props.obj._id\n\n        return (\n            \n            <div \n            shape=\"rTableRow\"\n            onClick={() => this.props.isClicked(id)}\n            onClickCapture={() => this.setState({clickedLists: this.props.clickedLists})}\n            className={(this.checkClicked(id)) ? \"rowClicked\" : \"rowNotClicked\"} \n            deletable={(this.checkDeletable(id)) ? \"true\" : \"false\"}\n            >\n                <div \n                shape=\"rTableCell\"\n                className={(this.checkClicked(id)) ? \"rowClicked\" : \"rowNotClicked\"}>\n                    {this.props.obj.name}\n                </div>\n                <div \n                shape=\"rTableCell\"\n                className={(this.checkClicked(id)) ? \"rowClicked\" : \"rowNotClicked\"}>\n                    {this.props.obj.description}\n                </div>\n                <div \n                shape=\"rTableCell\"\n                className={(this.checkClicked(id)) ? \"rowClicked\" : \"rowNotClicked\"}>\n                    {this.props.obj.due}\n                </div>\n            <div>\n                <div\n                shape=\"rTableCell\">\n                    <button \n                    className={(this.checkClicked(id)) ? \"Clicked\" : \"notClicked\"} \n                    onClick={() => this.props.clickHandler(listname)}\n                    shown={(this.checkDeletable(id)) ? \"hidden\" : \"\"}\n                    >Select</button>\n                \n                </div>\n                <div\n                shape=\"rTableCell\">\n                    <button className={(this.checkClicked(id)) ? \"Clicked\" : \"notClicked\"} \n                    onClick={() => this.props.editMenu(this.props.obj)}\n                    shown={(this.checkDeletable(id)) ? \"hidden\" : \"\"}\n                    >Edit</button>\n                </div>\n                <div\n                shape=\"rTableCell\">    \n                    <button \n                    onClick={() => this.props.buttonClicked(id)} \n                    onClickCapture={() => this.setState({clickedButtons: this.props.clickedButtons})}\n                    className={(this.checkClicked(id)) ? \"Clicked\" : \"notClicked\"}\n                    shown={(this.checkDeletable(id)) ? \"hidden\" : \"\"}\n                    >Delete</button> \n                    <button \n                    className=\"deletebutton\"\n                    onClick={() => this.props.deleteOneList(id, listname)}\n                    shown={(this.checkDeletable(id)) ? \"\" : \"hidden\"}\n                    >Delete List?</button>\n                </div>\n                <div\n                shape=\"rTableCell\">\n                <button \n                    className={(this.checkClicked(id)) ? \"Clicked\" : \"\"}\n                    onClick={() => this.props.buttonClicked(id)}\n                    shown={(this.checkDeletable(id)) ? \"show\" : \"hidden\"}\n                    >Cancel</button>\n                </div>\n            </div>\n            </div>\n            \n        );\n    }\n    \n}\n\nexport default ListTable;","import React, { Component } from 'react';\nimport ListTable from './ListTable'\n\nexport default class ListDisplay extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = { \n            listCollection: [], \n            clickedLists: [],\n            clickedButtons: []\n        \n        };\n    }\n\n\n    listTable = () => {\n        return this.props.listCollection.map((data, i) => {\n            return <ListTable obj={data} key={i} clickHandler={this.props.clickHandler} \n            editMenu={this.props.editMenu} \n            isClicked={this.props.isClicked} clickedLists={this.props.clickedLists} \n            deleteOneList={this.props.deleteOneList}\n            clickedButtons={this.props.clickedButtons} buttonClicked={this.props.buttonClicked}\n            unavailableLists={this.props.unavailableLists} />;\n        });\n    }\n\n\n    render(){\n        const listTable = this.listTable()\n        \n        return(\n            <div className=\"tableDisplay\">\n                <div shape=\"rTable\">\n                        <div shape=\"rTableRow\">\n                            <div shape=\"rTableCell\">Name</div>\n                            <div shape=\"rTableCell\">Description</div>\n                            <div shape=\"rTableCell\">Due</div>\n                        </div>\n                    \n                        {listTable}\n                        \n                </div>\n            </div>\n            \n\n        )\n    }\n\n}\n","import React, { Component } from 'react';\nimport ListDisplay from './Lists/ListDisplay';\nimport Axios from 'axios'\nimport { Redirect } from 'react-router';\nimport {AuthContext} from '../Context/Authentication'\nimport '../App.css'\n\nexport default class SelectList extends Component {\nconstructor(props){\n  super(props)\n\n  this.state = {\n    selection: \"\",\n    listCollection: [],\n    clickedLists: [],\n    clickedButtons: [],\n    unavailableLists: [],\n    editId: \"\",\n    listsLoaded: false\n    \n  }\n\n\n  this.clickHandler = this.clickHandler.bind(this)\n  this.isClicked = this.isClicked.bind(this)\n  this.deleteOneList = this.deleteOneList.bind(this)\n  this.buttonClicked = this.buttonClicked.bind(this)\n  this.editMenu = this.editMenu.bind(this)\n\n}\n\n\n\n  refreshLists = () => {\n    Axios.get('https://to-do-list-server-api.herokuapp.com/lists', {\n        params: {\n            user: this.context.state.userLogged,\n        }\n    })\n        .then(res => {\n            console.log(res)\n            this.setState({ listCollection: res.data.data,\n            listsLoaded: true });\n\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n};\n\n\n  componentDidMount(){\n  this.refreshLists()\n  }\n\n  isClicked(id){\n    let clicked = (this.state.clickedLists.includes(id))\n   //console.log(clicked)\n   if(clicked === false){\n       this.state.clickedLists.push(id)\n       return clicked === true\n\n   } else if(clicked === true){\n       this.state.clickedLists.splice(this.state.clickedLists.indexOf(id), 1);\n       return clicked === false\n   }\n}\n\nbuttonClicked(id){\n  let clicked = (this.state.clickedButtons.includes(id))\n //console.log(clicked)\n if(clicked === false){\n     this.state.clickedButtons.push(id)\n     return clicked === true\n\n } else if(clicked === true){\n     this.state.clickedButtons.splice(this.state.clickedButtons.indexOf(id), 1);\n     return clicked === false\n }\n}\n\n  clickHandler(name) {\n    console.log(name)\n    this.setState({ selection: name });\n    this.setState({ redirect: true });\n  }\n\n  addlist(){\n    this.setState({ redirect2: true})\n    \n  }\n\n  deleteOneList(id, listname){\n    console.log(id)\n    Axios.delete('https://to-do-list-server-api.herokuapp.com/list', {\n    params: {\n        id: id,\n        list: listname,\n        user: this.context.state.userLogged\n    }\n})\n    .then(res => {\n        this.state.unavailableLists.splice(this.state.unavailableLists.indexOf(id), 1);\n        this.refreshLists()\n        //console.log(res)\n    })\n    .catch(function(error){\n        console.log(error);\n    })\n}\n\n  editMenu(obj){\n        this.setState({\n            name: obj.name,\n            description: obj.description,\n            due: obj.due,\n            editId: obj._id \n        })\n        this.state.unavailableLists.splice(this.state.unavailableLists.indexOf(obj.name), 1);\n        this.setState({ redirect3: true})\n    }\n\n  render() {\n\n    if (this.state.redirect) {\n      console.log(this.state.selection)\n        return(\n          <AuthContext.Consumer>\n            {({identify}) => (\n                <Redirect push={identify(this.context.state.userLogged, this.state.selection)} to={'/CTForm'}/>\n            )}\n          </AuthContext.Consumer>\n          \n        )\n    }\n\n    if (this.state.redirect2){\n        return (\n          <Redirect push={true} to={{\n            pathname: '/CLForm',\n            state: {\n              unavailableLists: this.state.unavailableLists\n            }\n          }}/>\n        )\n    }\n\n    if(this.state.redirect3){\n        return (\n          <Redirect push={true} to={{\n            pathname: '/EList',\n            state: {\n              id: this.state.editId,\n              name: this.state.name,\n              description: this.state.description,\n              due: this.state.due,\n              unavailableLists: this.state.unavailableLists\n            }\n          }}/>\n        )\n    }\n\n    return (\n      <div>\n        <button disabled={this.state.listsLoaded ? false : true} onClick={() => this.addlist()}>Create New List</button>\n        \n        <ListDisplay listCollection={this.state.listCollection} clickHandler={this.clickHandler} \n        editMenu={this.editMenu} \n        isClicked={this.isClicked} clickedLists={this.state.clickedLists} \n        deleteOneList={this.deleteOneList}\n        clickedButtons={this.state.clickedButtons} buttonClicked={this.buttonClicked}\n        unavailableLists={this.state.unavailableLists} />\n        \n      </div>\n    );\n    }\n  }\n\nSelectList.contextType = AuthContext;\n","import React from 'react';\nimport Axios from 'axios';\nimport 'react-router-dom'\nimport { AuthContext } from '../../Context/Authentication'\nimport { withRouter, Redirect } from 'react-router-dom';\n\n\n\nclass ETask extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            name: \"\",\n            description: \"\",\n            due: \"\",\n            selection: \"\",\n            taskCollection: [],\n            unavailableTasks: []\n        };\n\n        this.change = this.change.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        \n    }\n\n    change = e => {\n        this.setState({\n        [e.target.name]: e.target.value\n        })\n\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        const id = this.props.history.location.state.id\n        const task = {\n            user: this.context.state.userLogged,\n            name: this.state.name,\n            description: this.state.description,\n            due: this.state.due,\n            list: this.context.state.activeList\n        }\n        Axios.patch('https://to-do-list-server-api.herokuapp.com/tasks', {\n            params: {\n                id: id,\n                task: task\n            }\n        })\n        .then((res) => {\n            this.setState({\n                name: \"\",\n                desc: \"\",\n                due: \"\"\n            })\n            this.setState({redirect: true})\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    componentDidMount(){\n        this.setState({\n            name: this.props.history.location.state.name,\n            description: this.props.history.location.state.description,\n            due: this.props.history.location.state.due,\n            unavailableTasks: this.props.history.location.state.unavailableTasks\n        })\n    }\n\n    goBack(){\n        this.setState({ back: true })\n    }\n    \n    render () {\n\n        if(this.state.redirect){\n            return (\n                <Redirect push to={'/CTForm'}/>\n            )\n        }\n\n        if(this.state.back){\n            return (\n                <Redirect push to={'/CTForm'}/>\n            )\n        }\n        \n        return(\n            <div>\n            <form>\n                <h3>Edit Task</h3>\n                <input\n                name=\"name\"\n                maxLength={20}\n                placeholder=\"Task Name\"\n                value={this.state.name}\n                onChange={e => this.change(e)}\n                />\n                <p className={(this.state.unavailableTasks.includes(this.state.name)) ? \"shown-messages\" : \"hidden-messages\" } > List names must be unique</p>\n                <br/>\n                <input\n                name=\"description\"\n                maxLength={50}\n                placeholder=\"What to do\"\n                value={this.state.description}\n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <input\n                name=\"due\"\n                maxLength={20}\n                placeholder=\"When to have it done\"\n                value={this.state.due}\n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <button disabled={this.state.name.length === 0} onClick={e => this.onSubmit(e)}>Update Task</button>\n                <br/>\n                <button type=\"button\" disabled={(this.state.unavailableTasks.includes(this.state.name)) ? true : false} onClick={() => this.goBack()}>Back</button>\n\n\n                \n            </form>\n          \n            </div>\n        )\n        \n    }\n\n}\n\nexport default withRouter(ETask);\nETask.contextType = AuthContext;","import React from 'react';\nimport Axios from 'axios';\nimport 'react-router-dom'\nimport { AuthContext } from '../../Context/Authentication'\nimport { withRouter, Redirect } from 'react-router-dom';\nimport '../../form.css'\n\n\n\nclass EList extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            name: \"\",\n            description: \"\",\n            due: \"\",\n            selection: \"\",\n            unavailableLists: [],\n            taskCollection: []\n        };\n\n        this.change = this.change.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        \n    }\n\n    change = e => {\n        this.setState({\n        [e.target.name]: e.target.value\n        })\n\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        const id = this.props.history.location.state.id\n        const listname = this.props.history.location.state.name\n\n        const taskUpdate = {\n            list: this.state.name\n        }\n\n        const list = {\n            user: this.context.state.userLogged,\n            name: this.state.name,\n            description: this.state.description,\n            due: this.state.due,\n        }\n        Axios.patch('https://to-do-list-server-api.herokuapp.com/list', {\n            params: {\n                user: this.context.state.userLogged,\n                id: id,\n                list: list,\n                prevName: listname,\n                nameUpdate: taskUpdate\n            }\n        })\n        .then((res) => {\n            this.setState({\n                name: \"\",\n                desc: \"\",\n                due: \"\"\n            })\n            this.setState({redirect: true})\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    componentDidMount(){\n        this.setState({\n            name: this.props.history.location.state.name,\n            description: this.props.history.location.state.description,\n            due: this.props.history.location.state.due,\n            unavailableLists: this.props.history.location.state.unavailableLists\n        })\n    }\n\n    goBack(){\n        this.setState({ back: true })\n    }\n    \n    render () {\n\n        if(this.state.redirect){\n            return (\n                <Redirect push to={'/Select'}/>\n            )\n        }\n\n        if(this.state.back){\n            return (\n                <Redirect push to={'/Select'}/>\n            )\n        }\n        \n        return(\n            <div>\n            <form>\n                <h3>Edit List</h3>\n                <input\n                name=\"name\"\n                maxLength={20}\n                placeholder=\"List Name\"\n                value={this.state.name}\n                onChange={e => this.change(e)}\n                />\n                <p className={(this.state.unavailableLists.includes(this.state.name)) ? \"shown-messages\" : \"hidden-messages\" } > List names must be unique</p>\n                <br/>\n                <input\n                name=\"description\"\n                maxLength={50}\n                placeholder=\"What to do\"\n                value={this.state.description}\n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <input\n                name=\"due\"\n                maxLength={20}\n                placeholder=\"When to have it done\"\n                value={this.state.due}\n                onChange={e => this.change(e)}\n                />\n                <br/>\n                <button disabled={this.state.name.length === 0} onClick={e => this.onSubmit(e)}>Update List</button>\n                <br/>\n                <button type=\"button\" onClick={() => this.goBack()}>Back</button>\n\n\n                \n            </form>\n          \n            </div>\n        )\n        \n    }\n\n}\n\nexport default withRouter(EList);\nEList.contextType = AuthContext;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport PrivateRoute from './PrivateRoutes'\nimport CTForm from '../Tasks/CreateTaskForm'\nimport CLForm from '../Lists/CreateListForm'\nimport CUForm from '../Users/CreateUserForm'\nimport SIForm from '../Users/SignInForm'\nimport SelectList from '../SelectList'\nimport EditTask from '../Tasks/EditTask'\nimport EditList from '../Lists/EditList'\n\nexport const Routes = () => {\n    return (  \n          \n        <div>\n          <Switch>\n          <Route exact path=\"/\">\n            <SIForm/>\n          </Route>\n          <PrivateRoute path=\"/CTForm\">\n            <CTForm />\n          </PrivateRoute>\n          <PrivateRoute path=\"/CLForm\">\n            <CLForm />\n          </PrivateRoute>\n          <Route path=\"/CUForm\">\n            <CUForm />\n          </Route>\n          <PrivateRoute path=\"/Select\">\n            <SelectList />\n          </PrivateRoute>\n          <PrivateRoute path=\"/ETask\">\n            <EditTask />\n          </PrivateRoute>\n          <PrivateRoute path=\"/EList\">\n            <EditList />\n          </PrivateRoute>\n          </Switch>\n        </div>\n    )\n  }\n  ","import React from 'react'\nimport { Routes } from '../Components/Navigation/Routes'\n\nexport default () => {\n    return (\n        <div>\n            <Routes/>\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { AuthContext } from '../../Context/Authentication'\n \nfunction SignOut() {\n    let history = useHistory();\n    let context = useContext(AuthContext)\n\n    return context.isAuthenticated ? (\n            <button\n                onClick={() => {\n                    context.signout(() => history.push(\"/\"));\n                }}\n            >\n                Sign out\n      </button>\n    ) : (\n            <p>Sign in to view lists</p>\n        );\n}\n\nexport default SignOut;","import React, { useState } from 'react';\nimport './App.css';\nimport './form.css';\nimport './Components/Users/SignInForm';\nimport './Components/Tasks/CreateTaskForm'\nimport { Links } from './Components/Navigation/Links'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthContext } from './Context/Authentication'\n\nimport Main from './Pages/index'\nimport SignOut from './Components/Navigation/SignOut';\n\nfunction App(){\n  const [isAuthenticated, setAuthenticated] = useState(false)\n  const [state, setState] = useState({\n    userLogged: \"\",\n    activeList: \"\"\n})\n\n  const authenticate = () => {\n    setAuthenticated(true)\n  }\n\n  const signout = () => {\n    setAuthenticated(false)\n  }\n\n  const identify = (user, list) => {\n    console.log(user)\n    console.log(list)\n    setState({ userLogged: user, activeList: list })\n  }\n  \n  \n\n  const store = {\n    isAuthenticated,\n    state,\n    authenticate,\n    signout,\n    identify\n  }\n\n\n  return (\n    <div className=\"App\">\n      \n      <AuthContext.Provider value={store}>\n            <Router>\n            <SignOut/>\n            <Links />\n            <Main/>\n            </Router> \n      </AuthContext.Provider>\n    </div>\n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}